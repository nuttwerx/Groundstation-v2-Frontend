syntax = "proto3";
package proto;

service GroundStationService {
    rpc streamPackets (StreamRequest) returns (stream DataBundle){}
    rpc sendCommand (Command) returns (Ack){}
    rpc ping (Ping) returns (Pong){}
    rpc controlServer (ServerControl) returns (Ack){}
}

message StreamRequest {}

message ServerControl{
    enum CommandEnum {
        LogServiceStart = 0;
        LogServiceStop = 1;
        DataStoreManagerStart = 2;
        DataStoreManagerStop = 3;
        BroadcasterStart = 4;
        BroadcasterStop = 5;
    }
    CommandEnum Command = 1;
}

message StartLogCommand {
    string name = 1;
}

message Command {
    string Node = 1;
    int32 PacketType = 2;
    repeated int32 Data = 3;
}

message Ack {}

message ServerStatus {
    bool DataStoreManagerRunning = 1;
	bool GRPCServerRunning = 2;
	bool BroadcasterRunning = 3;
	bool GSLoggerRunning = 4;
    repeated OpenPort OpenPorts = 5;
}

message OpenPort {
    int32 Port = 1;
    bool Serving = 2;
}

message Pong {
    ServerStatus Status = 1;
}

message Ping {}

message DataBundle {
    repeated Params Parameters = 1;
}

message DataPacket {
    string PacketName = 1;
    int32 PacketType = 2;
    int64 RxTime = 3;
    repeated Params Parameters = 4;
}

message Params {
    string PacketName = 1;
    string ParamName = 2;
    int64 RxTime = 3;
    Value Value = 4;
    string Units = 5;
}

message Value {
    int32 Index = 1;
    int64 Int64Value = 2;
    uint64 Uint64Value = 3;
    double DoubleValue = 4;
}